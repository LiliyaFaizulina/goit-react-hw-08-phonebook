{"version":3,"file":"static/js/643.3376d469.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,GAAAA,KAAH,2GAOJC,EAAUD,EAAAA,GAAAA,GAAH,uEAKPE,EAAUF,EAAAA,GAAAA,IAAH,gG,iKCNPG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAGd,GACEG,EAAAA,EAAAA,IAAU,CACRC,cAAe,CACbL,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBQ,SAAU,SAAAC,GACRX,GAASY,EAAAA,EAAAA,IAAUD,IACnBE,GACD,IAVGC,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,OAAQI,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,OAAQJ,EAA7D,EAA6DA,UAa7D,OACE,iCACE,SAAC,KAAD,6BACA,UAAC,KAAD,CAAMH,SAAUI,EAAhB,WACE,SAACI,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,MAAOX,EAAOP,MACdmB,SAAUR,EACVS,YAAY,oBACZnB,UAAQ,EACRoB,MAAOT,EAAQZ,OAASsB,QAAQT,EAAOb,OACvCuB,WAAYX,EAAQZ,OAASa,EAAOb,SAGtC,SAACc,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACLC,KAAK,WACLC,MAAOX,EAAOL,SACdiB,SAAUR,EACVS,YAAY,WACZnB,UAAQ,EACRoB,MAAOT,EAAQV,UAAYoB,QAAQT,EAAOX,UAC1CqB,WAAYX,EAAQV,UAAYW,EAAOX,YAGzC,SAACsB,EAAA,EAAD,CAAQR,KAAK,SAASS,QAAQ,YAA9B,wBAMP,EC1DD,EARkB,WAChB,OACE,SAACC,EAAA,EAAD,WACE,SAAC/B,EAAD,KAGL,C","sources":["components/Common.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const Heading = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n","import { useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { loginUser } from 'redux/auth/authOperation';\nimport { Form, Heading } from 'components/Common.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object({\n    email: yup\n      .string('Enter your email')\n      .email('Enter a valid email')\n      .required('Email is required'),\n    password: yup\n      .string('Enter your password')\n      .min(6, 'Password should be of minimum 6 characters length')\n      .required('Password is required'),\n  });\n\n  const { handleSubmit, values, handleChange, touched, errors, resetForm } =\n    useFormik({\n      initialValues: {\n        email: '',\n        password: '',\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        dispatch(loginUser(values));\n        resetForm();\n      },\n    });\n\n  return (\n    <>\n      <Heading>Authorization</Heading>\n      <Form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          onChange={handleChange}\n          placeholder=\"email@example.com\"\n          required\n          error={touched.email && Boolean(errors.email)}\n          helperText={touched.email && errors.email}\n        />\n\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          onChange={handleChange}\n          placeholder=\"password\"\n          required\n          error={touched.password && Boolean(errors.password)}\n          helperText={touched.password && errors.password}\n        />\n\n        <Button type=\"submit\" variant=\"contained\">\n          Login\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <Section>\n      <LoginForm />\n    </Section>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Form","styled","Heading","Wrapper","LoginForm","dispatch","useDispatch","validationSchema","yup","email","required","password","min","useFormik","initialValues","onSubmit","values","loginUser","resetForm","handleSubmit","handleChange","touched","errors","TextField","label","type","name","value","onChange","placeholder","error","Boolean","helperText","Button","variant","Section"],"sourceRoot":""}