{"version":3,"file":"static/js/815.c8f719c9.chunk.js","mappings":"mQAQaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GACI,cACPE,SAAS,oBACTC,IAAI,EAAG,kCACPC,IAAI,GAAI,mCACXC,MAAOL,EAAAA,GACG,oBACPE,SAAS,qBACTG,MAAM,uBACTC,SAAUN,EAAAA,GACA,uBACPG,IAAI,EAAG,qDACPD,SAAS,0BAEd,GACEK,EAAAA,EAAAA,IAAU,CACRC,cAAe,CACbP,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZP,iBAAkBA,EAClBU,SAAU,SAAAC,GACRb,GAASc,EAAAA,EAAAA,IAAaD,IACtBE,GACD,IAXGC,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,OAAQI,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,OAAQJ,EAA7D,EAA6DA,UAc7D,OACE,iCACE,SAAC,KAAD,kCACA,UAAC,KAAD,CAAMH,SAAUI,EAAhB,WACE,SAAC,KAAD,CACEI,MAAM,OACNC,KAAK,OACLjB,KAAK,OACLkB,KAAK,QACLC,MAAOV,EAAOT,KACdoB,SAAUP,EACVQ,YAAY,YACZpB,UAAQ,EACRqB,MAAOR,EAAQd,MAAQuB,QAAQR,EAAOf,MACtCwB,WAAYV,EAAQd,MAAQe,EAAOf,QAErC,SAAC,KAAD,CACEgB,MAAM,QACNC,KAAK,QACLjB,KAAK,QACLkB,KAAK,QACLC,MAAOV,EAAOL,MACdgB,SAAUP,EACVQ,YAAY,oBACZpB,UAAQ,EACRqB,MAAOR,EAAQV,OAASmB,QAAQR,EAAOX,OACvCoB,WAAYV,EAAQV,OAASW,EAAOX,SAGtC,SAAC,KAAD,CACEY,MAAM,WACNC,KAAK,WACLjB,KAAK,WACLkB,KAAK,QACLC,MAAOV,EAAOJ,SACde,SAAUP,EACVZ,UAAQ,EACRqB,MAAOR,EAAQT,UAAYkB,QAAQR,EAAOV,UAC1CmB,WAAYV,EAAQT,UAAYU,EAAOV,YAEzC,SAACoB,EAAA,EAAD,CACEC,QAAQ,YACRT,KAAK,SACLU,WAAS,EACTC,MAAO,CAAEC,UAAW,QAJtB,yBAWP,E,UChFD,EARqB,WACnB,OACE,SAACC,EAAA,EAAD,WACE,SAACnC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\n\nimport { registerUser } from 'redux/auth/authOperation';\nimport { Form, Heading, StyledTextField } from 'components/Common.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object({\n    name: yup\n      .string('Enter name')\n      .required('Name is required')\n      .min(2, 'Minimum length is 2 characters')\n      .max(10, 'Maximum length is 10 characters'),\n    email: yup\n      .string('Enter your email')\n      .required('Email is required')\n      .email('Enter a valid email'),\n    password: yup\n      .string('Enter your password')\n      .min(6, 'Password should be of minimum 6 characters length')\n      .required('Password is required'),\n  });\n  const { handleSubmit, values, handleChange, touched, errors, resetForm } =\n    useFormik({\n      initialValues: {\n        name: '',\n        email: '',\n        password: '',\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        dispatch(registerUser(values));\n        resetForm();\n      },\n    });\n\n  return (\n    <>\n      <Heading>Create new account</Heading>\n      <Form onSubmit={handleSubmit}>\n        <StyledTextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          size=\"small\"\n          value={values.name}\n          onChange={handleChange}\n          placeholder=\"User name\"\n          required\n          error={touched.name && Boolean(errors.name)}\n          helperText={touched.name && errors.name}\n        />\n        <StyledTextField\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          size=\"small\"\n          value={values.email}\n          onChange={handleChange}\n          placeholder=\"email@example.com\"\n          required\n          error={touched.email && Boolean(errors.email)}\n          helperText={touched.email && errors.email}\n        />\n\n        <StyledTextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          size=\"small\"\n          value={values.password}\n          onChange={handleChange}\n          required\n          error={touched.password && Boolean(errors.password)}\n          helperText={touched.password && errors.password}\n        />\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          fullWidth\n          style={{ marginTop: '16px' }}\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Section } from 'components/Section/Section';\n\nconst RegisterPage = () => {\n  return (\n    <Section>\n      <RegisterForm />\n    </Section>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","dispatch","useDispatch","validationSchema","yup","name","required","min","max","email","password","useFormik","initialValues","onSubmit","values","registerUser","resetForm","handleSubmit","handleChange","touched","errors","label","type","size","value","onChange","placeholder","error","Boolean","helperText","Button","variant","fullWidth","style","marginTop","Section"],"sourceRoot":""}